// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/nucleotides/count": {
            "post": {
                "description": "Upload a .fasta/.fa (or plain text FASTA) file and get counts of A/C/G/T with total.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dna"
                ],
                "summary": "Count DNA bases from a FASTA file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "FASTA file (.fasta, .fa) or text/plain",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.BasesCountResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid file or parameters",
                        "schema": {
                            "$ref": "#/definitions/apierror.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error while processing file",
                        "schema": {
                            "$ref": "#/definitions/apierror.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apierror.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "controllers.BasesCountDTO": {
            "type": "object",
            "properties": {
                "A": {
                    "type": "integer"
                },
                "C": {
                    "type": "integer"
                },
                "G": {
                    "type": "integer"
                },
                "T": {
                    "type": "integer"
                }
            }
        },
        "controllers.BasesCountResponse": {
            "type": "object",
            "properties": {
                "bases": {
                    "$ref": "#/definitions/controllers.BasesCountDTO"
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
